name: Build Windows

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      config:
        required: false
        default: 'Release'
        options:
          - Debug
          - Release
      plat:
        required: false
        type: choice
        default: 'linux'
        options:
          - linux
          - android
          - ios
          - macos
      os:
        required: false
        type: choice
        default: 'windows-2019'
        options:
          - ubuntu-20.04
          - ubuntu-22.04
          - macos-12
      arch:
        required: false
        default: 'x64'
        type: choice
        options:
          - x86
          - x64
          - arm64
      tls:
        required: false
        default: 'schannel'
        type: choice
        options:
          - openssl
          - openssl3
          - schannel
      xdp:
        required: false
        default: ''
        type: string
      sanitize:
        required: false
        default: ''
        type: string
      static:
        required: false
        default: ''
        type: string
      test:
        required: false
        default: ''
        type: string

permissions: read-all

jobs:
  build-windows:
    if: inputs.plat == 'windows' || inputs.plat == 'uwp'
    name: User Mode
    needs: []
    runs-on: ${{ inputs.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      with:
        fetch-depth: 0
    - name: Install Perl
      uses: shogo82148/actions-setup-perl@0bb5af61b3945a80585229183e7ac50a97d7996c
      with:
        perl-version: '5.34'
    - name: Install NASM
      uses: ilammy/setup-nasm@321e6ed62a1fc77024a3bd853deb33645e8b22c4
    - name: Prepare Machine
      shell: pwsh
      run: scripts/prepare-machine.ps1 -ForBuild -Tls ${{ inputs.tls }}
    - name: Build For Test
      if: inputs.test == true
      shell: pwsh
      run: scripts/build.ps1 -Config ${{ inputs.config }} -Platform ${{ inputs.plat }} -Arch ${{ inputs.arch }} -Tls ${{ inputs.tls }} -DisableTools -DisablePerf -DynamicCRT ${{ inputs.xdp }} ${{ inputs.sanitize }}
    - name: Build
      if: inputs.test == false
      shell: pwsh
      run: scripts/build.ps1 -Config ${{ inputs.config }} -Platform ${{ inputs.plat }} -Arch ${{ inputs.arch }} -Tls ${{ inputs.tls }} ${{ inputs.xdp }} ${{ inputs.sanitize }} ${{ inputs.static }}
    - name: Upload build artifacts
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
      with:
        name: ${{ inputs.config }}-${{ inputs.plat }}-${{ inputs.os }}-${{ inputs.arch }}-${{ inputs.tls }}${{ inputs.xdp }}${{ inputs.sanitize }}${{ inputs.static }}
        path: artifacts

  build-windows-kernel:
    if: inputs.plat == 'winkernel'
    name: Kernel Mode
    needs: []
    runs-on: ${{ inputs.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      with:
        fetch-depth: 0
    - name: Prepare Machine
      shell: pwsh
      run: scripts/prepare-machine.ps1 -ForBuild -ForKernel
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@1ff57057b5cfdc39105cd07a01d78e9b0ea0c14c
    - name: Nuget Restore
      shell: pwsh
      run: msbuild msquic.kernel.sln -t:restore /p:RestorePackagesConfig=true /p:Configuration=${{ inputs.config }} /p:Platform=${{ inputs.arch }}
    - name: Build
      shell: pwsh
      run: msbuild msquic.kernel.sln /p:Configuration=${{ inputs.config }} /p:Platform=${{ inputs.arch }} /p:QUIC_VER_SUFFIX=-official
    - name: Sign Kernel
      shell: pwsh
      run: scripts/sign.ps1 -Config ${{ inputs.config }} -Arch ${{ inputs.arch }} -Tls ${{ inputs.tls }}
    - name: Upload build artifacts
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
      with:
        name: ${{ inputs.config }}-${{ inputs.plat }}-${{ inputs.os }}-${{ inputs.arch }}-${{ inputs.tls }}
        path: artifacts
