name: Test Down Level

on:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

permissions: read-all

jobs:
  test-down-level:
    strategy:
      fail-fast: false
      matrix:
        release: ['2.0.0']
        os: [ubuntu-latest, windows-latest]
        arch: [x64]
        tls: [schannel, openssl]
        exclude:
        - os: ubuntu-latest
          tls: schannel
        - os: windows-latest
          tls: openssl
    runs-on: ${{ matrix.os }}
    name: Test
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@bdb12b622a910dfdc99a31fdfe6f45a16bc287a4
      with:
        egress-policy: audit
    - name: Checkout repository
      uses: actions/checkout@629c2de402a417ea7690ca6ce3f33229e27606a5
    - name: Prepare Machine
      run: scripts/prepare-machine.ps1 -Configuration Dev -Tls ${{ matrix.tls }} -InitSubmodules -TestCertificates -FailOnError
      shell: pwsh
    - name: Build Release
      shell: pwsh
      run: scripts/build.ps1 -Config Release -Arch ${{ matrix.arch }} -Tls ${{ matrix.tls }} -UseSystemOpenSSLCrypto -DisableTest -DisableTools -DisablePerf
    - name: Download Tests
      shell: pwsh
      run: |
        $osName = "${{runner.os}}".ToLower()
        Invoke-WebRequest -Uri "https://github.com/microsoft/msquic/releases/download/v${{matrix.release}}/msquic_${{runner.os}}_${{matrix.arch}}_Release_${{matrix.tls}}_test.zip" -OutFile "artifacts/test.zip"
        Expand-Archive -Path artifacts/test.zip -DestinationPath artifacts/bin/$osName/${{matrix.arch}}_Release_${{matrix.tls}}
    - name: Run Tests (Linux)
      if: runner.os == 'Linux'
      shell: pwsh
      run: |
        chmod +x artifacts/bin/linux/${{matrix.arch}}_Release_${{matrix.tls}}/msquictest
        $env:LD_LIBRARY_PATH = Join-Path (Get-Location).Path "artifacts/bin/linux/${{matrix.arch}}_Release_${{matrix.tls}}"
        scripts/test.ps1 -Config Release -Arch ${{ matrix.arch }} -Tls ${{ matrix.tls }} -SkipUnitTests -Filter -*CredValidation*
    - name: Run Tests (Windows)
      if: runner.os == 'Windows'
      run: scripts/test.ps1 -Config Release -Arch ${{ matrix.arch }} -Tls ${{ matrix.tls }} -SkipUnitTests -Filter -*ValidateConfiguration:*ValidAlpnLengths:*ResumeRejection*:*ConnectClientCertificate*
