name: Stress

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

concurrency:
  # Cancel any workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: stress-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  stress:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-12, windows-2019, windows-2022]
        arch: [x64]
        tls: [schannel, openssl, openssl3]
        xdp: ['', '-UseXdp']
        sanitize: ['', '-Sanitize']
        exclude:
        # Schannel only supported on windows-2022
        - os: ubuntu-20.04
          tls: schannel
        - os: macos-12
          tls: schannel
        - os: windows-2019
          tls: schannel
        # Linux and Windows Schannel use ASAN
        - os: ubuntu-20.04
          sanitize: ''
        - tls: schannel
          sanitize: ''
        # OpenSSL on Windows and macOS doesn't work with ASAN
        - os: macos-12
          sanitize: '-Sanitize'
        - os: windows-2019
          tls: openssl
          sanitize: '-Sanitize'
        - os: windows-2019
          tls: openssl3
          sanitize: '-Sanitize'
        - os: windows-2022
          tls: openssl
          sanitize: '-Sanitize'
        - os: windows-2022
          tls: openssl3
          sanitize: '-Sanitize'
        # XDP stuff is Windows only
        - os: ubuntu-20.04
          xdp: '-UseXdp'
        - os: macos-12
          xdp: '-UseXdp'
    runs-on: ${{ matrix.os }}
    name: Stress
    env:
      main-timeout: 3600000
      main-repeat: 100
      main-allocfail: 100
      pr-timeout: 600000
      pr-repeat: 20
      pr-allocfail: 100
    steps:
    - name: Checkout repository
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      with:
        fetch-depth: 0
    - name: Install Perl
      if: runner.os == 'Windows'
      uses: shogo82148/actions-setup-perl@795ea77474d1f81da5b0a04028a5b94d4118a9c2
      with:
        perl-version: '5.34'
    - name: Install NASM
      if: runner.os == 'Windows'
      uses: ilammy/setup-nasm@321e6ed62a1fc77024a3bd853deb33645e8b22c4
    - name: Prepare Machine
      run: scripts/prepare-machine.ps1 -Tls ${{ matrix.tls }} -ForBuild -ForTest ${{ matrix.xdp }}
      shell: pwsh
    - name: Build
      shell: pwsh
      run: scripts/build.ps1 -Config Debug -Arch ${{ matrix.arch }} -Tls ${{ matrix.tls }} -DisableTest -DisablePerf -DynamicCRT ${{ matrix.xdp }} ${{ matrix.sanitize }}
    - name: spinquic (PR)
      if: github.event_name == 'pull_request'
      timeout-minutes: 15
      shell: pwsh
      run: scripts/spin.ps1 -AZP -Config Debug -Arch ${{ matrix.arch }} -Tls ${{ matrix.tls }} -Timeout ${{ env.pr-timeout }} -RepeatCount ${{ env.pr-repeat }} -AllocFail ${{ env.pr-allocfail }} ${{ matrix.xdp }}
    - name: spinquic (Official)
      if: github.event_name != 'pull_request'
      timeout-minutes: 65
      shell: pwsh
      run: scripts/spin.ps1 -AZP -Config Debug -Arch ${{ matrix.arch }} -Tls ${{ matrix.tls }} -Timeout ${{ env.main-timeout }} -RepeatCount ${{ env.main-repeat }} -AllocFail ${{ env.main-allocfail }} ${{ matrix.xdp }}
    - name: Upload on Failure
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
      if: failure()
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.tls }}${{ matrix.xdp }}${{ matrix.sanitize }}
        path: artifacts
