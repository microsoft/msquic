name: DotNet Language Interop Tests

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

concurrency:
  # Cancel any workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: dotnet-test-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build-darwin-frameworks:
    name: Build All Darwin Frameworks
    uses: ./.github/workflows/build-reuse-darwin-framework.yml
    with:
      config: 'Debug'
  
  build-linux:
    name: Ubuntu
    needs: []
    strategy:
      fail-fast: false
      matrix:
        vec: [
          { plat: "linux", os: "ubuntu-20.04", arch: "x64", tls: "openssl" },
          { plat: "linux", os: "ubuntu-22.04", arch: "x64", tls: "openssl3", xdp: "-UseXdp" },
        ]
    uses: ./.github/workflows/build-reuse-unix.yml
    with:
      config: 'Debug'
      plat: ${{ matrix.vec.plat }}
      os: ${{ matrix.vec.os }}
      arch: ${{ matrix.vec.arch }}
      tls: ${{ matrix.vec.tls }}
      xdp: ${{ matrix.vec.xdp }}

  build-windows:
    name: Windows
    needs: []
    strategy:
      fail-fast: false
      matrix:
        vec: [
          { plat: "windows", os: "windows-2022", arch: "x64", tls: "openssl" },
          { plat: "windows", os: "windows-2022", arch: "x64", tls: "openssl3" },
        ]
    uses: ./.github/workflows/build-reuse-win.yml
    with:
      config: 'Debug'
      plat: ${{ matrix.vec.plat }}
      os: ${{ matrix.vec.os }}
      arch: ${{ matrix.vec.arch }}
      tls: ${{ matrix.vec.tls }}
    
  dotnet-test:
    name: DotNet Test
    needs: [build-windows, build-linux, build-darwin-frameworks]
    strategy:
      fail-fast: false
      matrix:
        vec: [
          { plat: "windows", os: "windows-2022", arch: "x64", tls: "openssl" },
          { plat: "windows", os: "windows-2022", arch: "x64", tls: "openssl3" },
          { plat: "linux", os: "ubuntu-20.04", arch: "x64", tls: "openssl" },
          { plat: "linux", os: "ubuntu-22.04", arch: "x64", tls: "openssl3", xdp: "-UseXdp" },
          { plat: "macos", os: "macos-12", arch: "universal", tls: "openssl" },
        ]
    runs-on: ${{ matrix.vec.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
    - name: Prepare Machine
      shell: pwsh
      run: scripts/prepare-machine.ps1 -ForTest ${{ matrix.vec.xdp == '-UseXdp' && '-UseXdp -ForceXdpInstall' || '' }}
    - name: Download Build Artifacts
      uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e
      with:
        name: Debug-${{ matrix.vec.plat }}-${{ matrix.vec.os }}-${{ matrix.vec.arch }}-${{ matrix.vec.tls }}${{ matrix.vec.xdp }}
        path: artifacts
    - uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3
      with:
        dotnet-version: 6.0.x
    - name: Run Lang Interop
      shell: pwsh
      run: scripts/DotNetTest.ps1 -Config Debug -Arch ${{ matrix.vec.arch }} -Tls ${{ matrix.vec.tls }}
