name: Linux Packages

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

concurrency:
  # Cancel any workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: package-linux-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build-packages:
    name: Generate Linux Packages
    needs: []
    strategy:
      fail-fast: false
      matrix:
        vec: [
          { config: "Release", os: "ubuntu-20.04", arch: "arm", tls: "openssl" },
          { config: "Release", os: "ubuntu-20.04", arch: "arm64", tls: "openssl" },
          { config: "Release", os: "ubuntu-20.04", arch: "x64", tls: "openssl" },
          { config: "Release", os: "ubuntu-22.04", arch: "arm", tls: "openssl3" },
          { config: "Release", os: "ubuntu-22.04", arch: "arm64", tls: "openssl3" },
          { config: "Release", os: "ubuntu-22.04", arch: "x64", tls: "openssl3" },
          { config: "Release", os: "ubuntu-24.04", arch: "arm", tls: "openssl3" },
          { config: "Release", os: "ubuntu-24.04", arch: "arm64", tls: "openssl3" },
          { config: "Release", os: "ubuntu-24.04", arch: "x64", tls: "openssl3", xdp: "-UseXdp" },
        ]
    uses: ./.github/workflows/package-reuse-linux.yml
    with:
      config: ${{ matrix.vec.config }}
      os: ${{ matrix.vec.os }}
      arch: ${{ matrix.vec.arch }}
      tls: ${{ matrix.vec.tls }}
      xdp: ${{ matrix.vec.xdp }}

  test-packages:
    name: Test Linux Packages
    needs: [build-packages]
    strategy:
      fail-fast: false
      matrix:
        vec: [
          { config: "Release", os: "ubuntu-20.04", arch: "x64", tls: "openssl" },
          { config: "Release", os: "ubuntu-22.04", arch: "x64", tls: "openssl3" },
          { config: "Release", os: "ubuntu-24.04", arch: "x64", tls: "openssl3", xdp: "-UseXdp" },
        ]
    runs-on: ${{ matrix.vec.os }}
    steps:
    - name: Download Package
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
      with:
        name: ${{ matrix.vec.config }}-linux-${{ matrix.vec.os }}-${{ matrix.vec.arch }}-${{ matrix.vec.tls }}-UseSystemOpenSSLCrypto${{ matrix.vec.xdp }}
        path: artifacts
    - name: Download Build Artifacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
      with:
        name: Package-${{ matrix.vec.config }}-linux-${{ matrix.vec.os }}-${{ matrix.vec.arch }}-${{ matrix.vec.tls }}-UseSystemOpenSSLCrypto${{ matrix.vec.xdp }}
        path: artifacts
    - name: Install Package
      run: |
        sudo apt-add-repository ppa:lttng/stable-2.13
        sudo apt-get update
        sudo apt-get install -y lttng-tools
        sudo find -name "*.deb" -exec sudo apt install -y ./{} \;
        rm artifacts/bin/linux/${{ matrix.vec.arch }}_${{ matrix.vec.config }}_${{ matrix.vec.tls }}/libmsquic.so*
        ls artifacts/bin/linux/${{ matrix.vec.arch }}_${{ matrix.vec.config }}_${{ matrix.vec.tls }}
    - name: Test
      run: |
        chmod +x artifacts/bin/linux/${{ matrix.vec.arch }}_${{ matrix.vec.config }}_${{ matrix.vec.tls }}/msquictest
        artifacts/bin/linux/${{ matrix.vec.arch }}_${{ matrix.vec.config }}_${{ matrix.vec.tls }}/msquictest --gtest_filter=ParameterValidation.ValidateApi
