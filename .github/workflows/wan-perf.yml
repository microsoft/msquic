name: WAN Perf

on:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

env:
  seed: 41473a2e60b6958500ec0add7dcfb9
  iterations: 3
  duration: 10000
  pacing: 1

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Prepare Machine
      shell: pwsh
      run: scripts/prepare-machine.ps1 -Configuration Build -InitSubmodules -Extra "-DisableTest -DisableTools"
    - name: Prepare Machine
      shell: pwsh
      run: scripts/build.ps1 -Config Release -DisableTest -DisableTools
    - uses: actions/upload-artifact@v2
      with:
        name: bin
        path: |
          artifacts/bin
          !artifacts/bin/**/*.ilk
          !artifacts/bin/**/*.cer
          !artifacts/bin/**/*.exp
          !artifacts/bin/**/*.lastcodeanalysissucceeded
  wan-perf:
    name: Run Perf Test
    runs-on: windows-2022
    needs: build
    strategy:
      fail-fast: false
      matrix:
        rate: [5, 10, 50, 100]
        rtt: [5, 50, 200, 500]
        queueRatio: [0.25, 1.0]
        loss: [0, 1000]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Prepare Machine
      shell: pwsh
      run: scripts/prepare-machine.ps1 -Configuration Test -DuoNic
    - uses: actions/download-artifact@v2
      with:
        name: bin
        path: artifacts/bin
    - name: Run WAN Perf
      shell: pwsh
      run: scripts/emulated-performance.ps1 -Protocol quic -NumIterations ${{ env.iterations }} -DurationMs ${{ env.duration }} -Pacing ${{ env.pacing }} -BottleneckMbps ${{ matrix.rate }} -RttMs ${{ matrix.rtt }} -BottleneckQueueRatio ${{ matrix.queueRatio }} -RandomLossDenominator ${{ matrix.loss }} -BaseRandomSeed ${{ env.seed }}
    - uses: actions/upload-artifact@v2
      with:
        name: results
        path: artifacts/PerfDataResults/windows/x64_Release_schannel/WAN/*.json
