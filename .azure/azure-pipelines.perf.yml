#
# Continuous Integration (CI)
# This pipeline builds and runs MsQuic performance tests.
#

trigger: none
pr: none

name: 0.$(Date:yyyy).$(Date:MM).$(DayOfMonth).$(Rev:rr).0

parameters:
- name: winkernel
  type: boolean
  displayName: Windows Kernel
  default: true
- name: winuser_schannel
  type: boolean
  displayName: Windows (Schannel)
  default: true
- name: winuser_openssl
  type: boolean
  displayName: Windows (openssl)
  default: true
- name: linux_openssl
  type: boolean
  displayName: Linux (openssl)
  default: true
- name: arch
  type: string
  displayName: Architecture
  default: x64
  values:
  - x64
  - x86
- name: pgo_mode
  type: boolean
  displayName: PGO Mode
  default: false
- name: logging
  type: string
  displayName: Logging Type
  default: None
  values:
  - None
  - Basic.Light
  - Datapath.Light
  - Datapath.Verbose
  - Stacks.Light
  - RPS.Light
  - Performance.Light
  - Basic.Verbose
  - Performance.Light
  - Performance.Verbose
  - Full.Light
  - Full.Verbose
  - SpinQuic.Light
- name: testToRun
  type: string
  displayName: Run Specific Test
  default: all
  values:
  - all
  - ThroughputUp
  - ThroughputDown
  - RPS
  - HPS
- name: testTypes
  type: string
  displayName: Test Types
  default: Remote,Loopback
  values:
  - Remote,Loopback
  - Remote
  - Loopback
- name: protocol
  type: string
  displayName: Protocol
  default: QUIC
  values:
  - QUIC
  - TCPTLS

stages:

#
# Builds
#

- ${{ if eq(parameters.winkernel, true) }}:
  - stage: build_winkernel
    displayName: Build Windows Kernel
    dependsOn: []
    variables:
      runCodesignValidationInjection: false
    jobs:
    - template: ./templates/build-config-winkernel.yml
      parameters:
        arch: ${{ parameters.arch }}
        config: Release

- ${{ if eq(parameters.winuser_schannel, true) }}:
  - stage: build_winuser_schannel
    displayName: Build Windows (Schannel)
    dependsOn: []
    variables:
      runCodesignValidationInjection: false
    jobs:
    - template: ./templates/build-config-user.yml
      parameters:
        image: windows-latest
        platform: windows
        arch: ${{ parameters.arch }}
        tls: schannel
        config: Release
        ${{ if eq(parameters.pgo_mode, false) }}:
          extraBuildArgs: -DisableTest -DisableTools
        ${{ if eq(parameters.pgo_mode, true) }}:
          extraBuildArgs: -DisableTest -DisableTools -PGO

- ${{ if eq(parameters.winuser_openssl, true) }}:
  - stage: build_winuser_openssl
    displayName: Build Windows (OpenSSL)
    dependsOn: []
    variables:
      runCodesignValidationInjection: false
    jobs:
    - template: ./templates/build-config-user.yml
      parameters:
        image: windows-latest
        platform: windows
        arch: ${{ parameters.arch }}
        tls: openssl
        config: Release
        ${{ if eq(parameters.pgo_mode, false) }}:
          extraBuildArgs: -DisableTest -DisableTools
        ${{ if eq(parameters.pgo_mode, true) }}:
          extraBuildArgs: -DisableTest -DisableTools -PGO

- ${{ if eq(parameters.winuser_openssl, true) }}:
  - stage: build_linux_openssl
    displayName: Build Linux (OpenSSL)
    dependsOn: []
    variables:
      runCodesignValidationInjection: false
    jobs:
    - template: ./templates/build-config-user.yml
      parameters:
        image: ubuntu-latest
        platform: linux
        arch: ${{ parameters.arch }}
        tls: openssl
        config: Release
        extraBuildArgs: -DisableTest -DisableTools

#
# Tests
#


