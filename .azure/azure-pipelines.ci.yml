#
# Continuous Integration (CI)
# This pipeline builds and validates MsQuic for all configurations.
#

trigger:
  batch: true
  branches:
    include:
    - main
    - release/*
    - feature/*
pr:
- main
- release/*
- feature/*

name: 0.$(Date:yyyy).$(Date:MM).$(DayOfMonth).$(Rev:rr).0

resources:
  containers:
  - container: raspbian
    image:  wpilib/raspbian-cross-ubuntu:10-18.04

stages:

#
# Builds
#

- stage: build_docker
  displayName: Publish QNS Docker Image
  condition: and(in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'), startsWith(variables['Build.SourceBranch'], 'refs/heads/main'))
  dependsOn: []
  jobs:
  - job: publish_docker
    displayName: Build and Publish
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      submodules: recursive
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'public/msquic/qns'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        containerRegistry: '9196310f-afae-4a53-8e35-b9e753eeb0f3'
        tags: |
          latest
          v0.9.2.$(Build.BuildId)
  - template: .\templates\run-qns.yml
    parameters:
      dependsOn: publish_docker
      clients: [ 'quant', 'quic-go', 'msquic' ]
      servers: [ 'msquic' ]
  - template: .\templates\run-qns.yml
    parameters:
      dependsOn: publish_docker
      clients: [ 'msquic' ]
      servers: [ 'quant', 'quic-go' ]

- stage: build_dbgext
  displayName: Build WinDbg Extension
  dependsOn: []
  jobs:
  - template: ./templates/build-config-dbgext.yml
    parameters:
      arch: x64
  - template: ./templates/build-config-dbgext.yml
    parameters:
      arch: x86

- stage: build_winkernel
  displayName: Build Windows Drivers
  dependsOn: []
  jobs:
  - template: ./templates/build-config-winkernel.yml
    parameters:
      arch: x64
  - template: ./templates/build-config-winkernel.yml
    parameters:
      arch: x86
  - template: ./templates/build-config-winkernel.yml
    parameters:
      arch: arm
  - template: ./templates/build-config-winkernel.yml
    parameters:
      arch: arm64

- stage: build_windows
  displayName: Build Windows
  dependsOn: []
  jobs:
  # Officially supported configurations.
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x86
      tls: schannel
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: schannel
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: arm
      tls: schannel
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: arm64
      tls: schannel
  # Other configurations.
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: stub
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: mitls
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: uwp
      arch: x64
      tls: schannel
      extraBuildArgs: -DisableTools -DisableTest
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: openssl

- stage: build_linux
  displayName: Build Linux
  dependsOn: []
  jobs:
  # Officially supported configurations.
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      arch: x64
      tls: openssl
  # Other configurations.
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      arch: x64
      tls: stub
      extraBuildArgs: -SanitizeAddress
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      arch: x64
      tls: openssl
      extraBuildArgs: -Clang
      skipArtifacts: true
      extraName: 'clang'
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      container: raspbian
      platform: linux
      arch: arm
      tls: openssl
      extraBuildArgs: -DisableLogs -Generator Ninja -ToolchainFile cmake/toolchains/arm-pi-gnueabihf.toolchain.cmake

#
# Performance Tests
#

- stage: performance
  displayName: Performance Testing
  dependsOn:
  - build_windows
  - build_linux
  - build_winkernel
  jobs:
  - template: ./templates/run-performance.yml
    parameters:
      pool: MsQuic-Win-Perf
      platform: windows
      localTls: schannel
      remoteTls: schannel
  - template: ./templates/run-performance.yml
    parameters:
      pool: MsQuic-Win-Perf
      platform: windows
      localTls: schannel
      remoteTls: schannel
      testTypes: 'Remote'
      extraName: 'Kernel'
      kernelMode: -Kernel
  - template: ./templates/run-performance.yml
    parameters:
      pool: MsQuic-Win-Perf
      platform: windows
      localTls: mitls
      remoteTls: mitls
  - template: ./templates/run-performance.yml
    parameters:
      pool: MsQuic-Win-Perf
      platform: windows
      localTls: openssl
      remoteTls: openssl
  - template: ./templates/run-performance.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      localTls: openssl
      remoteTls: openssl
      testTypes: 'Loopback'

#
# Kernel Build Verification Tests
#

- stage: test_bvt_kernel
  displayName: BVT Kernel
  dependsOn:
  - build_winkernel
  - build_windows
  jobs:
  - template: ./templates/run-bvt.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
      logProfile: Full.Light
      extraArgs: -Kernel
      kernel: true

#
# Build Verification Tests
#

- stage: test_bvt
  displayName: BVT
  dependsOn:
  - build_windows
  - build_linux
  jobs:
  - template: ./templates/run-bvt.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
      logProfile: Full.Light
  - template: ./templates/run-bvt.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: mitls
      logProfile: Full.Light
      extraArgs: -Filter -*Unreachable/0:CryptTest/CryptTest.Encryption/2:TlsTest.CertificateError
  - template: ./templates/run-bvt.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: openssl
      extraArgs: -Filter -*TlsTest.CertificateError:ParameterValidation.ValidateServerSecConfig:Basic/WithFamilyArgs.Unreachable/0:AppData/*:Misc/*
  - template: ./templates/run-bvt.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: openssl
      extraArgs: -Filter -*TlsTest.CertificateError
  - template: ./templates/run-bvt.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: stub
      extraArgs: -Filter -*TlsTest.CertificateError

#
# SpinQuic Tests
#

- stage: spinquic
  displayName: SpinQuic
  dependsOn:
  - build_windows
  - build_linux
  jobs:
  - template: ./templates/run-spinquic.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
  - template: ./templates/run-spinquic.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: stub
  - template: ./templates/run-spinquic.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: openssl
  - template: ./templates/run-spinquic.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: stub
  - template: ./templates/run-spinquic.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: openssl

#
# Code Coverage
#

- stage: codecoverage
  displayName: Code Coverage
  dependsOn:
  - build_windows
  jobs:
  - template: ./templates/run-bvt.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
      codeCoverage: true
  - template: ./templates/run-spinquic.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
      codeCoverage: true
  - template: ./templates/merge-publish-coverage.yml
    parameters:
      image: windows-latest
      platform: windows
      config: Debug
      arch: x64
      tls: schannel

#
# QuicInterop
#

- stage: quicinterop
  displayName: QuicInterop
  dependsOn:
  - build_windows
  - build_linux
  jobs:
  - template: ./templates/run-quicinterop.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
  - template: ./templates/run-quicinterop.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: mitls
  - template: ./templates/run-quicinterop.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: openssl
  - template: ./templates/run-quicinterop.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: openssl

#
# Mirror
#

- stage: mirror
  displayName: Mirror Branch
  dependsOn:
  - build_windows
  - build_winkernel
  - build_dbgext
  - build_linux
  condition: and(in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'), not(startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/')), succeeded())
  jobs:
  - job: mirror
    displayName: Mirror
    pool:
      vmImage: windows-latest
    steps:
    - checkout: self
      persistCredentials: true
    - task: PowerShell@2
      displayName: Sync Changes to AzDO Mirror Branch
      inputs:
        pwsh: true
        filePath: scripts/sync-mirror.ps1
        arguments: -Branch $(Build.SourceBranch)
      env:
        AzDO_PAT: $(AzDO_PAT)

#
# Distribution
#

- stage: distribution
  displayName: Distribution
  dependsOn:
  - build_windows
  - build_linux
  condition: and(in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'), succeeded())
  jobs:
  - template: ./templates/build-distribution.yml
