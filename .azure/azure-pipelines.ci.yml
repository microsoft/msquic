#
# Continuous Integration (CI)
# This pipeline builds and validates MsQuic for all configurations.
#

trigger:
  batch: true
  branches:
    include:
    - main
    - release/*
    - feature/*
  paths:
    exclude:
    - src/plugins/*
    - docs/*
    - README.md
pr:
  branches:
    include:
    - main
    - release/*
    - feature/*
  paths:
    exclude:
    - src/plugins/*
    - docs/*
    - README.md

# Periodically rebuild release branches to make sure they are functional.
schedules:
- cron: "0 0 * * Mon"
  displayName: Weekly Release Build
  branches:
    include:
    - release/*
  always: true

name: 0.$(Date:yyyy).$(Date:MM).$(DayOfMonth).$(Rev:rr).0

resources:
  containers:
  - container: raspbian
    image:  wpilib/raspbian-cross-ubuntu:10-18.04

stages:

#
# Builds
#

- stage: build_winkernel_release
  displayName: Build Windows Drivers - Release
  dependsOn: []
  jobs:
  - template: ./templates/build-config-winkernel.yml
    parameters:
      arch: x64
      config: Release

- stage: build_winkernel_debug
  displayName: Build Windows Drivers - Debug
  dependsOn: []
  jobs:
  - template: ./templates/build-config-winkernel.yml
    parameters:
      arch: x64
      config: Debug

- stage: build_winkernel_nontest
  displayName: Build Windows Drivers - Non Tested
  dependsOn: []
  jobs:
  - template: ./templates/build-config-winkernel.yml
    parameters:
      arch: x86
  - template: ./templates/build-config-winkernel.yml
    parameters:
      arch: arm
  - template: ./templates/build-config-winkernel.yml
    parameters:
      arch: arm64

- stage: build_windows_release
  displayName: Build Windows - Release
  dependsOn: []
  jobs:
  # Officially supported configurations.
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: schannel
      config: Release
  # Other configurations.
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: openssl
      config: Release
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: mitls
      config: Release

- stage: build_windows_debug
  displayName: Build Windows - Debug
  dependsOn: []
  jobs:
  # Officially supported configurations.
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: schannel
      config: Debug
  # Other configurations.
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: stub
      config: Debug
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: mitls
      config: Debug
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: openssl
      config: Debug

- stage: build_windows_nontest
  displayName: Build Windows - Non Tested
  dependsOn: []
  jobs:
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x64
      tls: stub
      config: Release
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x86
      tls: schannel
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: arm
      tls: schannel
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: arm64
      tls: schannel
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: uwp
      arch: x64
      tls: schannel
      extraBuildArgs: -DisableTools -DisableTest
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: arm64
      tls: openssl
  - template: ./templates/build-config-user.yml
    parameters:
      image: windows-latest
      platform: windows
      arch: x86
      tls: openssl

- stage: build_linux_release
  displayName: Build Linux - Release
  dependsOn: []
  jobs:
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      arch: x64
      tls: openssl
      config: Release

- stage: build_linux_debug
  displayName: Build Linux - Debug
  dependsOn: []
  jobs:
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      arch: x64
      tls: openssl
      config: Debug
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      arch: x64
      tls: stub
      extraBuildArgs: -SanitizeAddress
      config: Debug

- stage: build_linux_nontest
  displayName: Build Linux - Non Tested
  dependsOn: []
  jobs:
  # Other configurations.
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      arch: x64
      tls: stub
      extraBuildArgs: -SanitizeAddress
      config: Release
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      arch: x64
      tls: openssl
      extraBuildArgs: -Clang
      skipArtifacts: true
      extraName: 'clang'
  - template: ./templates/build-config-user.yml
    parameters:
      image: ubuntu-latest
      container: raspbian
      platform: linux
      arch: arm
      tls: openssl
      ubuntuVersion: 18.04
      extraBuildArgs: -DisableLogs -Generator Ninja -ToolchainFile cmake/toolchains/arm-pi-gnueabihf.toolchain.cmake

#
# Performance Tests
#

- stage: performance
  displayName: Performance Testing
  dependsOn:
  - build_windows_release
  - build_linux_release
  - build_winkernel_release
  jobs:
  - template: ./templates/run-performance.yml
    parameters:
      pool: MsQuic-Win-Perf
      platform: windows
      localTls: schannel
      remoteTls: schannel
  - template: ./templates/run-performance.yml
    parameters:
      pool: MsQuic-Win-Perf
      platform: windows
      localTls: schannel
      remoteTls: schannel
      testTypes: 'Remote'
      extraName: 'Kernel'
      kernelMode: -Kernel
  - template: ./templates/run-performance.yml
    parameters:
      pool: MsQuic-Win-Perf
      platform: windows
      localTls: openssl
      remoteTls: openssl
  - template: ./templates/run-performance.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      localTls: openssl
      remoteTls: openssl
      testTypes: 'Loopback'

- stage: wanperf
  displayName: WAN Performance Testing
  dependsOn:
  - build_windows_release
  jobs:
  - template: ./templates/run-wanperf.yml
    parameters:
      jobName: wanperf_5Mbps
      displayName: 5 Mbps
      iterations: 3
      durationMs: 10000
      rateMbps: 5
      bottleneckQueueRatio: (0.25,1.0)
      rttMs: (5,50,200)
      logProfile: Datapath.Light
  - template: ./templates/run-wanperf.yml
    parameters:
      jobName: wanperf_30Mbps
      displayName: 30 Mbps
      iterations: 3
      durationMs: 10000
      rateMbps: 30
      bottleneckQueueRatio: (0.25,1.0)
      rttMs: (5,50,200)
      logProfile: Datapath.Light
  - template: ./templates/run-wanperf.yml
    parameters:
      jobName: wanperf_100Mbps
      displayName: 100 Mbps
      iterations: 3
      durationMs: 10000
      rateMbps: 100
      bottleneckQueueRatio: (0.25,1.0)
      rttMs: (5,50,200)
      logProfile: Datapath.Light

- ${{ if not(eq(variables['Build.Reason'], 'Schedule')) }}:
  - stage: perf_post_process
    displayName: Perf Post Processing
    condition: succeededOrFailed()
    dependsOn:
    - performance
    jobs:
    - template: ./templates/post-process-performance.yml

#
# Kernel Build Verification Tests
#

- stage: test_bvt_kernel
  displayName: BVT Kernel
  dependsOn:
  - build_winkernel_debug
  - build_windows_debug
  jobs:
  - template: ./templates/run-bvt.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
      logProfile: Full.Light
      extraArgs: -Kernel
      kernel: true

#
# Build Verification Tests
#

- stage: test_bvt
  displayName: BVT
  dependsOn:
  - build_windows_debug
  - build_linux_debug
  jobs:
  - template: ./templates/run-bvt.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
      logProfile: Full.Light
      extraArgs: -Filter -*CryptTest.HpMaskChaCha20:CryptTest.WellKnownChaChaPoly
  - template: ./templates/run-bvt.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: mitls
      logProfile: Full.Light
      extraArgs: -Filter -*Unreachable/0:CryptTest/CryptTest.Encryption/2:CryptTest.WellKnownChaChaPoly:TlsTest.CertificateError
  - template: ./templates/run-bvt.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: openssl
      extraArgs: -Filter -*TlsTest.CertificateError:ParameterValidation.ValidateServerSecConfig:Basic/WithFamilyArgs.Unreachable/0:AppData/*:Misc/*
  - template: ./templates/run-bvt.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: openssl
      extraArgs: -Filter -*TlsTest.CertificateError:*.Tcp*
  - template: ./templates/run-bvt.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: stub
      extraArgs: -Filter -*TlsTest.CertificateError:*.Tcp*

#
# SpinQuic Tests
#

- stage: spinquic
  displayName: SpinQuic
  dependsOn:
  - build_windows_debug
  - build_linux_debug
  jobs:
  - template: ./templates/run-spinquic.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
  - template: ./templates/run-spinquic.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: stub
  - template: ./templates/run-spinquic.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: openssl
  - template: ./templates/run-spinquic.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: stub
  - template: ./templates/run-spinquic.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: openssl

#
# Code Coverage
#

- stage: codecoverage
  displayName: Code Coverage
  dependsOn:
  - build_windows_debug
  jobs:
  - template: ./templates/run-bvt.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
      codeCoverage: true
  - template: ./templates/run-spinquic.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
      codeCoverage: true
  - template: ./templates/merge-publish-coverage.yml
    parameters:
      image: windows-latest
      platform: windows
      config: Debug
      arch: x64
      tls: schannel

#
# QuicInterop
#

- stage: quicinterop
  displayName: QuicInterop
  dependsOn:
  - build_windows_release
  - build_linux_release
  jobs:
  - template: ./templates/run-quicinterop.yml
    parameters:
      pool: MsQuic-Win-Latest
      platform: windows
      tls: schannel
  - template: ./templates/run-quicinterop.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: mitls
  - template: ./templates/run-quicinterop.yml
    parameters:
      image: windows-latest
      platform: windows
      tls: openssl
  - template: ./templates/run-quicinterop.yml
    parameters:
      image: ubuntu-latest
      platform: linux
      tls: openssl

#
# Mirror
#

- ${{ if and(in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'), not(eq(variables['Build.Reason'], 'Schedule')), not(startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'))) }}:
  - stage: mirror
    displayName: Mirror Branch
    dependsOn:
    - build_windows_release
    - build_winkernel_release
    - build_linux_release
    - build_windows_debug
    - build_winkernel_debug
    - build_linux_debug
    - build_windows_nontest
    - build_winkernel_nontest
    - build_linux_nontest
    jobs:
    - job: mirror
      displayName: Mirror
      pool:
        vmImage: windows-latest
      steps:
      - checkout: self
        persistCredentials: true
      - task: PowerShell@2
        displayName: Sync Changes to AzDO Mirror Branch
        inputs:
          pwsh: true
          filePath: scripts/sync-mirror.ps1
          arguments: -Branch $(Build.SourceBranch)
        env:
          AzDO_PAT: $(AzDO_PAT)

#
# Distribution
#

- ${{ if and(in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'), not(eq(variables['Build.Reason'], 'Schedule')), not(startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'))) }}:
  - stage: distribution
    displayName: Distribution
    dependsOn:
    - build_windows_release
    - build_linux_release
    - build_windows_debug
    - build_linux_debug
    - build_windows_nontest
    - build_linux_nontest
    jobs:
    - template: ./templates/build-distribution.yml
