#
# This pipeline executes the interop runner for all implementations, or only the
# specified client and/or server.
#

trigger: none
pr: none

name: 0.$(Date:yyyy).$(Date:MM).$(DayOfMonth).$(Rev:rr).0

parameters:
- name: client
  type: string
  displayName: Client
  default: 'all'
- name: server
  type: string
  displayName: Server
  default: 'all'
- name: timeout
  type: number
  displayName: Timeout (min)
  default: 25
- name: build
  type: boolean
  displayName: Build docker image
  default: false

jobs:
- ${{ if parameters.build }}:
  - job: publish_docker
    displayName: Build and Publish
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      submodules: recursive
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'public/msquic/qns'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        containerRegistry: '9196310f-afae-4a53-8e35-b9e753eeb0f3'
        tags: custom-$(Build.BuildId)
- template: .\templates\run-qns.yml
  parameters:
    ${{ if parameters.build }}:
      dependsOn: publish_docker
    timeout: ${{ parameters.timeout }}
    ${{ if eq(parameters.client, 'all') }}:
      clients: [ 'quic-go', 'quicly', 'ngtcp2', 'quant', 'mvfst', 'quiche', 'kwik', 'picoquic', 'aioquic', 'neqo' ]
    ${{ if and(eq(parameters.client, 'msquic'), parameters.build) }}:
      build: custom-$(Build.BuildId)
    ${{ if ne(parameters.client, 'all') }}:
      clients: [ '${{ parameters.client }}' ]
    ${{ if eq(parameters.server, 'all') }}:
      servers: [ 'quic-go', 'quicly', 'ngtcp2', 'quant', 'mvfst', 'quiche', 'picoquic', 'aioquic', 'neqo', 'nginx', 'msquic' ]
    ${{ if ne(parameters.server, 'all') }}:
      servers: [ '${{ parameters.server }}' ]
