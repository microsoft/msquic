# Prepares the vpack.

jobs:
- job: preparepackage
  pool:
    type: windows
  displayName: Prepare Package for Windows OS
  variables:
    runCodesignValidationInjection: false
    ob_outputDirectory: $(Build.SourcesDirectory)/artifacts/package
    ob_sdl_codeSignValidation_excludes: -|**\*.sys;-|**\*.dll;-|**\*.exe
  steps:
  - task: Powershell@2
    displayName: Validate package commits
    inputs:
      pwsh: true
      filePath: scripts/validate-package-commits.ps1
      arguments: -ResourceCommit $(resources.pipeline.onebranch.sourceCommit) -ResourceBranch $(resources.pipeline.onebranch.sourceBranch) -PipelineCommit $(Build.SourceVersion) -PipelineBranch $(Build.SourceBranch)
  - template: ./download-artifacts.yml
    parameters:
      platform: winkernel
      config: Release
      tls: schannel
  - template: ./download-artifacts.yml
    parameters:
      platform: winkernel
      config: Debug
      tls: schannel

  - template: ./download-artifacts.yml
    parameters:
      platform: windows
      config: Release
      tls: schannel
  - template: ./download-artifacts.yml
    parameters:
      platform: windows
      config: Debug
      tls: schannel

  - task: PowerShell@2
    displayName: Prepare Package Files
    inputs:
      filePath: scripts/prepare-package.ps1

  - task: CopyFiles@2
    displayName: Copy versions.json
    inputs:
      contents: 'versions.json'
      sourceFolder: $(Build.SourcesDirectory)/artifacts/bin/windows/x64_Release_schannel
      targetFolder: $(Build.SourcesDirectory)/artifacts/package

