#
# Uploads SIGNED packages generated by Official build pipeline
#
trigger: none # https://aka.ms/obpipelines/triggers

resources:
  pipelines:
  - pipeline: onebranch     # Name of the pipeline resource
    source: msquic-Official # Name of the pipeline referenced by the pipeline resource
    trigger: true

name: 0.$(Date:yyyy).$(Date:MM).$(DayOfMonth).$(Rev:rr).0

variables:
  DisableDockerDetector: true

parameters:
- name: opensslrpmcblrepos
  type: object
  default:
  - cbl-mariner-1.0-prod-Microsoft-x86_64-rpms-yum
  - cbl-mariner-2.0-prod-Microsoft-x86_64-yum
  - cbl-mariner-2.0-prod-Microsoft-aarch64-yum
- name: opensslrpmrepos
  type: object
  default:
  - microsoft-sles12-prod-yum
  - microsoft-sles15-prod-yum
  - microsoft-centos7-prod-yum
  - microsoft-centos8-prod-yum
  - microsoft-opensuse15-prod-yum
  - microsoft-fedora32-prod-yum
  - microsoft-fedora33-prod-yum
  - microsoft-fedora34-prod-yum
  - microsoft-fedora37-prod-yum
  - microsoft-rhel7.3-prod-yum
  - microsoft-rhel8.0-prod-yum
  - microsoft-rhel8.1-prod-yum
- name: openssldebrepos
  type: object
  default:
  - microsoft-ubuntu-xenial-prod-apt
  - microsoft-debian-stretch-prod-apt
  - microsoft-ubuntu-bionic-prod-apt
  - microsoft-debian-buster-prod-apt
  - microsoft-ubuntu-focal-prod-apt
  - microsoft-ubuntu-groovy-prod-apt
  - microsoft-ubuntu-hirsute-prod-apt
  - microsoft-debian-bullseye-prod-apt
- name: openssl3debrepos
  type: object
  default:
  - microsoft-ubuntu-jammy-prod-apt
  - microsoft-ubuntu-kinetic-prod-apt
  - microsoft-ubuntu-lunar-prod-apt
  - microsoft-debian-bookworm-prod-apt
- name: openssl3rpmrepos
  type: object
  default:
  - microsoft-fedora36-prod-yum
  - microsoft-fedora38-prod-yum
  - microsoft-rhel9.0-prod-yum
- name: debug # debug mode will not actually upload and publish packages
  type: boolean
  default: false

stages:
- stage: UploadPackage_stage
  condition: or(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Build.Reason'], 'Manual'))
  jobs:
  - job: UploadPackage_openssl_debs
    displayName: Upload openSSL based DEB packages to repos
    timeoutInMinutes: 120
    workspace:
      clean: all
    pool:
      vmImage: 'ubuntu-latest'
    variables:
    - group: MsQuicAADApp
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          source: specific
          project: $(resources.pipeline.onebranch.projectID)
          pipeline: $(resources.pipeline.onebranch.pipelineID)
          preferTriggeringPipeline: true
          runVersion: specific
          runId: $(resources.pipeline.onebranch.runID)
          artifact: drop_package_linux_distribution_openssl
          path: $(Build.SourcesDirectory)/artifacts/signed/openssl
      - task: DownloadSecureFile@1
        name:  pmcv4cert
        displayName: 'Download cert for PMC v4'
        inputs:
          secureFile: 'auth.pem'
      - ${{ each repo in parameters.openssldebrepos }}:
        - script: bash scripts/upload-linux-packages.sh -i $(PMCv4ClientId) -c $(pmcv4cert.secureFilePath) -f $(Build.SourcesDirectory)/artifacts/signed/openssl/gen -r ${{ repo }} -n "*.deb"
          condition: eq(${{ parameters.debug }}, false)
          displayName: ${{ repo }}
          continueOnError: true
  - job: UploadPackage_openssl_rpms
    displayName: Upload openSSL based RPM packages to repos
    timeoutInMinutes: 120
    workspace:
      clean: all
    pool:
      vmImage: 'ubuntu-latest'
    variables:
    - group: MsQuicAADApp
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          source: specific
          project: $(resources.pipeline.onebranch.projectID)
          pipeline: $(resources.pipeline.onebranch.pipelineID)
          preferTriggeringPipeline: true
          runVersion: specific
          runId: $(resources.pipeline.onebranch.runID)
          artifact: drop_package_linux_distribution_openssl
          path: $(Build.SourcesDirectory)/artifacts/signed/openssl
      - task: DownloadSecureFile@1
        name:  pmcv4cert
        displayName: 'Download cert for PMC v4'
        inputs:
          secureFile: 'auth.pem'
      - ${{ each repo in parameters.opensslrpmrepos }}:
        - script: bash scripts/upload-linux-packages.sh -i $(PMCv4ClientId) -c $(pmcv4cert.secureFilePath) -f $(Build.SourcesDirectory)/artifacts/signed/openssl/gen -r ${{ repo }} -n "*.rpm"
          condition: eq(${{ parameters.debug }}, false)
          displayName: ${{ repo }}
          continueOnError: true
  - job: UploadPackage_openssl_rpms_cbl
    displayName: Upload openSSL based RPM packages to CBL repos
    timeoutInMinutes: 120
    workspace:
      clean: all
    pool:
      vmImage: 'ubuntu-latest'
    variables:
    - group: MsQuicAADApp
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          source: specific
          project: $(resources.pipeline.onebranch.projectID)
          pipeline: $(resources.pipeline.onebranch.pipelineID)
          preferTriggeringPipeline: true
          runVersion: specific
          runId: $(resources.pipeline.onebranch.runID)
          artifact: drop_package_linux_distribution_openssl
          path: $(Build.SourcesDirectory)/artifacts/signed/openssl
      - task: DownloadSecureFile@1
        name:  pmcv4cert
        displayName: 'Download cert for PMC v4'
        inputs:
          secureFile: 'auth.pem'
      - ${{ each repo in parameters.opensslrpmcblrepos }}:
        - script: bash scripts/upload-linux-packages.sh -i $(PMCv4ClientId) -c $(pmcv4cert.secureFilePath) -f $(Build.SourcesDirectory)/artifacts/signed/openssl/cbl -r ${{ repo }} -n "*.rpm"
          condition: eq(${{ parameters.debug }}, false)
          displayName: ${{ repo }}
          continueOnError: true
  - job: UploadPackage_openssl3_debs
    displayName: Upload openSSL3 based DEB packages to repos
    timeoutInMinutes: 120
    workspace:
      clean: all
    pool:
      vmImage: 'ubuntu-latest'
    variables:
    - group: MsQuicAADApp
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          source: specific
          project: $(resources.pipeline.onebranch.projectID)
          pipeline: $(resources.pipeline.onebranch.pipelineID)
          preferTriggeringPipeline: true
          runVersion: specific
          runId: $(resources.pipeline.onebranch.runID)
          artifact: drop_package_linux_distribution_openssl3
          path: $(Build.SourcesDirectory)/artifacts/signed/openssl3
      - task: DownloadSecureFile@1
        name:  pmcv4cert
        displayName: 'Download cert for PMC v4'
        inputs:
          secureFile: 'auth.pem'
      - ${{ each repo in parameters.openssl3debrepos }}:
        - script: bash scripts/upload-linux-packages.sh -i $(PMCv4ClientId) -c $(pmcv4cert.secureFilePath) -f $(Build.SourcesDirectory)/artifacts/signed/openssl3/gen -r ${{ repo }} -n "*.deb"
          condition: eq(${{ parameters.debug }}, false)
          displayName: ${{ repo }}
          continueOnError: true
  - job: UploadPackage_openssl3_rpms
    displayName: Upload openSSL3 based RPM packages to repos
    timeoutInMinutes: 120
    workspace:
      clean: all
    pool:
      vmImage: 'ubuntu-latest'
    variables:
    - group: MsQuicAADApp
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          source: specific
          project: $(resources.pipeline.onebranch.projectID)
          pipeline: $(resources.pipeline.onebranch.pipelineID)
          preferTriggeringPipeline: true
          runVersion: specific
          runId: $(resources.pipeline.onebranch.runID)
          artifact: drop_package_linux_distribution_openssl3
          path: $(Build.SourcesDirectory)/artifacts/signed/openssl3
      - task: DownloadSecureFile@1
        name:  pmcv4cert
        displayName: 'Download cert for PMC v4'
        inputs:
          secureFile: 'auth.pem'
      - ${{ each repo in parameters.openssl3rpmrepos }}:
        - script: bash scripts/upload-linux-packages.sh -i $(PMCv4ClientId) -c $(pmcv4cert.secureFilePath) -f $(Build.SourcesDirectory)/artifacts/signed/openssl3/gen -r ${{ repo }} -n "*.rpm"
          condition: eq(${{ parameters.debug }}, false)
          displayName: ${{ repo }}
          continueOnError: true
