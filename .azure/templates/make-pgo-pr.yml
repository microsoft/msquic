jobs:
- job: make_pgo_pr
  displayName: Make PGO Pull Request
  pool:
    vmImage: ubuntu-latest
  variables:
  - name: runCodesignValidationInjection
    value: false
  - name: skipComponentGovernanceDetection
    value: true
  - group: DeploymentKeys
  steps:
  - checkout: none

  - task: PowerShell@2
    displayName: Prepare Test Machine
    inputs:
      targetType: inline
      pwsh: true
      script: |
        git clone --single-branch --branch main https://github.com/microsoft/msquic
        git config --global credential.helper store
        Set-Content -Path "$env:HOME\.git-credentials" -Value "https://$($env:MAPPED_DEPLOYMENT_KEY):x-oauth-basic@github.com`n" -NoNewLine

        # Set Git Config Info
        git config user.email "quicdev@microsoft.com"
        git config user.name "QUIC Dev[bot]"
    env:
      MAPPED_DEPLOYMENT_KEY: $(GitHubDeploymentKey)

  - task: DownloadBuildArtifacts@0
    displayName: Download Perf Artifacts
    inputs:
      artifactName: performance
      downloadPath: msquic/artifacts/PerfDataResults

  - task: PowerShell@2
    displayName: Copy Files
    inputs:
      targetType: inline
      pwsh: true
      script: Copy-Item -Path msquic/artifacts/PerfDataResults/windows/x64_release_schannel/msquic.pgd msquic/src/bin/winuser/pgo_x64/msquic.schannel.pgd -Force

  - task: PowerShell@2
    displayName: Create Branch and Commit
    inputs:
      targetType: inline
      pwsh: true
      script: |
        $BranchName = "merge-pgo-$(get-date -format 'yyyy-MM-dd')"
        git checkout -b $BranchName
        git commit -am "Update PGO data"
        git push --set-upstream origin $BranchName
