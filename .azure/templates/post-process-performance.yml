# This template does post processing on the performance data files.

jobs:
- job: post_process_perf
  displayName: Post Process Performance
  condition: succeededOrFailed()
  pool:
    vmImage: ubuntu-latest
  variables:
  - name: runCodesignValidationInjection
    value: false
  - name: skipComponentGovernanceDetection
    value: true
  - group: DeploymentKeys
  steps:
  - checkout: none

  - task: PowerShell@2
    displayName: Prepare Test Machine
    inputs:
      targetType: inline
      pwsh: true
      script: git clone --single-branch --branch performance https://github.com/microsoft/msquic

  - task: DownloadBuildArtifacts@0
    displayName: Download Perf Artifacts
    inputs:
      artifactName: performance
      downloadPath: msquic/artifacts/PerfDataResults

  - task: Powershell@2
    displayName: Merge coverage (Release)
    condition: in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI')
    inputs:
      pwsh: true
      filePath: msquic/powershell/merge-performance.ps1
      arguments: -Branch $(Build.SourceBranch) -PublishResults
    env:
      MAPPED_DEPLOYMENT_KEY: $(GitHubDeploymentKey)

  - task: Powershell@2
    displayName: Merge coverage (PR/Feature)
    condition: not(in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
    inputs:
      pwsh: true
      filePath: msquic/powershell/merge-performance.ps1
      arguments: -Branch $(Build.SourceBranch)

  - task: CopyFiles@2
    displayName: Move Performance Results
    condition: succeededOrFailed()
    inputs:
      sourceFolder: msquic/artifacts/mergedPerfResults
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    displayName: Upload Performance Results
    condition: succeededOrFailed()
    inputs:
      artifactName: performance_merged
      pathToPublish: $(Build.ArtifactStagingDirectory)
      parallel: true
