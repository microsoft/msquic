# This template contains steps to build msquic.sys for a single architecture.

parameters:
  arch: ''
  config: 'Debug,Release'
  uploadArtifacts: true
  artifactFolder: ''
  pool: 'windows-latest'

jobs:
- job: build_winkernel_${{ parameters.arch }}
  displayName: ${{ parameters.arch }}

  variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
    ob_outputDirectory: '$(Build.SourcesDirectory)\artifacts\bin\winkernel\${{ parameters.artifactFolder }}' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
    ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl

  pool:
    vmImage: ${{ parameters.pool }}
  steps:
  - checkout: self
    path: msquic

  - task: PowerShell@2
    displayName: Prepare Build Machine
    inputs:
      pwsh: true
      filePath: scripts/prepare-machine.ps1
      arguments: -Configuration Build -InitSubmodules -Tls schannel -Kernel -FailOnError

  - task: NuGetCommand@2
    displayName: Nuget Restore
    inputs:
      restoreSolution: msquic.kernel.sln

  - task: VSBuild@1
    displayName: Build Source Code (Debug)
    condition: and(succeeded(), contains('${{ parameters.config }}', 'Debug'))
    inputs:
      solution: msquic.kernel.sln
      platform: ${{ parameters.arch }}
      configuration: debug
      msbuildArgs: /p:QUIC_VER_SUFFIX=-official /p:QUIC_VER_BUILD_ID=$(Build.BuildId)

  - task: VSBuild@1
    displayName: Build Source Code (Release)
    condition: and(succeeded(), contains('${{ parameters.config }}', 'Release'))
    inputs:
      solution: msquic.kernel.sln
      platform: ${{ parameters.arch }}
      configuration: release
      msbuildArgs: /p:QUIC_VER_SUFFIX=-official /p:QUIC_VER_BUILD_ID=$(Build.BuildId)

  - ${{ if eq(parameters.uploadArtifacts, true) }}:
    - template: ./upload-artifacts.yml
