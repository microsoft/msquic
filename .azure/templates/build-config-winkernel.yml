# This template contains steps to build msquic.sys for a single architecture.

parameters:
  arch: ''
  config: 'Debug,Release'
  uploadArtifacts: true
  artifactFolder: ''
  pool: 'windows-latest'

jobs:
- job: build_winkernel_${{ parameters.arch }}
  displayName: ${{ parameters.arch }}

  variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
    ob_outputDirectory: '$(Build.SourcesDirectory)\artifacts\bin\winkernel\${{ parameters.artifactFolder }}' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
    ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl

  # TODO fix this
  pool:
    type: windows
  steps:
  - checkout: self
    path: msquic

  - powershell: |
      $repoName = "PowerShell/PowerShell"
      $assetPattern = "*-win-x64.msi"
      $extractDirectory = "$(Build.SourcesDirectory)"

      # Download latest release
      $releasesUri = "https://api.github.com/repos/$repoName/releases/latest"
      $asset = (Invoke-WebRequest $releasesUri -UseBasicParsing | ConvertFrom-Json).assets | Where-Object name -like $assetPattern
      $downloadUri = $asset.browser_download_url

      $extractPath = [System.IO.Path]::Combine($extractDirectory, $asset.name)
      Write-Host Downloading $asset.name...
      Invoke-WebRequest -Uri $downloadUri -Out $extractPath

      # Install Powershell Core
      Write-Host Installing $asset.name...
      Start-Process $extractPath -ArgumentList '/quiet /passive' -Wait

      # Adding Powershell Core to PATH
      Write-Host "##vso[task.setVariable variable=PATH]$(PATH)C:\Program Files\PowerShell\7;"
    displayName: üìê Use Powershell Core

  - task: PowerShell@2
    displayName: Prepare Build Machine
    inputs:
      pwsh: true
      filePath: scripts/prepare-machine.ps1
      arguments: -Configuration Build -InitSubmodules -Tls schannel -Kernel -FailOnError

  - task: NuGetCommand@2
    displayName: Nuget Restore
    inputs:
      restoreSolution: msquic.kernel.sln

  - task: VSBuild@1
    displayName: Build Source Code (Debug)
    condition: and(succeeded(), contains('${{ parameters.config }}', 'Debug'))
    inputs:
      solution: msquic.kernel.sln
      platform: ${{ parameters.arch }}
      configuration: debug
      msbuildArgs: /p:QUIC_VER_SUFFIX=-official /p:QUIC_VER_BUILD_ID=$(Build.BuildId)

  - task: VSBuild@1
    displayName: Build Source Code (Release)
    condition: and(succeeded(), contains('${{ parameters.config }}', 'Release'))
    inputs:
      solution: msquic.kernel.sln
      platform: ${{ parameters.arch }}
      configuration: release
      msbuildArgs: /p:QUIC_VER_SUFFIX=-official /p:QUIC_VER_BUILD_ID=$(Build.BuildId)

  - ${{ if eq(parameters.uploadArtifacts, true) }}:
    - template: ./upload-artifacts.yml
