# This template contains steps to build MsQuic for a single configuration.

parameters:
  image: ''
  container: ''
  platform: ''
  arch: ''
  tls: ''
  config: 'Debug,Release'
  extraBuildArgs: ''
  skipArtifacts: false
  extraName: ''

jobs:
- job: build_${{ parameters.platform }}_${{ parameters.arch }}_${{ parameters.tls }}_${{ parameters.extraName }}
  displayName: ${{ parameters.arch }} ${{ parameters.tls }} ${{ parameters.extraName }}
  pool:
    vmImage: ${{ parameters.image }}
  ${{ if ne(parameters.container, '') }}:
    container: ${{ parameters.container }}
  steps:
  - checkout: self
    submodules: recursive
    ${{ if eq(parameters.platform, 'windows') }}:
      path: msquic

  - task: Cache@2
    inputs:
      key:  '"${{ parameters.platform }}_${{ parameters.arch }}_${{ parameters.tls }}_${{ parameters.extraName }}_2" | .gitmodules'
      path: build/${{ parameters.platform }}/${{ parameters.arch }}_${{ parameters.tls }}/openssl
    displayName: Cache OpenSSL
    condition: eq('${{ parameters.tls }}', 'openssl')

  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    condition: eq('${{ parameters.platform }}', 'linux')
    inputs:
      packageType: sdk
      version: 3.1.302
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: ShellScript@2
    displayName: Install Powershell
    condition: eq('${{ parameters.platform }}', 'linux')
    inputs:
      scriptPath: scripts/install-powershell.sh

  - task: PowerShell@2
    displayName: Prepare Build Machine
    inputs:
      pwsh: true
      filePath: scripts/prepare-machine.ps1
      arguments: -Configuration Build

  - task: PowerShell@2
    displayName: Build Source Code (Debug)
    condition: contains('${{ parameters.config }}', 'Debug')
    inputs:
      pwsh: true
      filePath: scripts/build.ps1
      arguments: -Arch ${{ parameters.arch }} -Tls ${{ parameters.tls }} -Platform ${{ parameters.platform }} -CI ${{ parameters.extraBuildArgs }}

  - task: PowerShell@2
    displayName: Build Source Code (Release)
    condition: contains('${{ parameters.config }}', 'Release')
    inputs:
      pwsh: true
      filePath: scripts/build.ps1
      arguments: -Config Release -Arch ${{ parameters.arch }} -Tls ${{ parameters.tls }} -Platform ${{ parameters.platform }} -CI ${{ parameters.extraBuildArgs }}

  - ${{ if eq(parameters.skipArtifacts, false) }}:
    - template: ./upload-artifacts.yml
