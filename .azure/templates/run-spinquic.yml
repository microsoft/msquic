# This template contains steps to run spinquic for a single configuration.

parameters:
  pool: ''
  image: ''
  platform: ''
  config: 'Debug'
  arch: 'x64'
  tls: ''
  allocFail: 0
  timeout: 600000
  repeat: 20
  codeCoverage: false
  extraArgs: ''
  extraArtifactDir: ''

jobs:
- job: spin_${{ parameters.platform }}_${{ parameters.arch }}_${{ parameters.tls }}${{ parameters.extraArtifactDir }}
  displayName: ${{ parameters.platform }} ${{ parameters.arch }} ${{ parameters.tls }}${{ parameters.extraArtifactDir }}
  ${{ if ne(parameters.pool, '') }}:
    pool: ${{ parameters.pool }}
    workspace:
      clean: all
  ${{ if eq(parameters.pool, '') }}:
    pool:
      vmImage: ${{ parameters.image }}
  variables:
    runCodesignValidationInjection: false
  steps:
  - checkout: self

  - template: ./download-artifacts.yml
    parameters:
      platform: ${{ parameters.platform }}
      arch: ${{ parameters.arch }}
      tls: ${{ parameters.tls }}
      extraArtifactDir: ${{ parameters.extraArtifactDir }}

  - task: PowerShell@2
    displayName: Prepare Test Machine
    inputs:
      pwsh: true
      filePath: scripts/prepare-machine.ps1
      arguments: -Configuration Test

  - task: PowerShell@2
    displayName: Run SpinQuic
    timeoutInMinutes: 12
    inputs:
      pwsh: true
      filePath: scripts/spin.ps1
      ${{ if eq(parameters.codeCoverage, true) }}:
        arguments: -GenerateXmlResults -Timeout ${{ parameters.timeout }} -RepeatCount ${{ parameters.repeat }} -AllocFail ${{ parameters.allocFail }} -Config ${{ parameters.config }} -Arch ${{ parameters.arch }} -Tls ${{ parameters.tls }} -CodeCoverage -LogProfile Basic.Light ${{ parameters.extraArgs }}
      ${{ if eq(parameters.codeCoverage, false) }}:
        arguments: -AZP -GenerateXmlResults -Timeout ${{ parameters.timeout }} -RepeatCount ${{ parameters.repeat }} -AllocFail ${{ parameters.allocFail }} -Config ${{ parameters.config }} -Arch ${{ parameters.arch }} -Tls ${{ parameters.tls }} ${{ parameters.extraArgs }}

  - template: ./upload-test-artifacts.yml
    parameters:
      platform: ${{ parameters.platform }}
      config: ${{ parameters.config }}
      arch: ${{ parameters.arch }}
      tls: ${{ parameters.tls }}
      codeCoverage: ${{ parameters.codeCoverage }}
