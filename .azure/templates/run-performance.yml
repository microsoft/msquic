# This template contains steps to run performance tests for a single configuration.

parameters:
  pool: ''
  image: ''
  platform: ''
  config: 'Release'
  arch: 'x64'
  localTls: ''
  remoteTls: ''
  extraName: ''
  extraArgs: '-Publish'

jobs:
- job: performance_${{ parameters.platform }}_${{ parameters.arch }}_${{ parameters.localTls }}_${{ parameters.remoteTls }}_${{ parameters.extraName }}
  displayName: ${{ parameters.platform }} ${{ parameters.arch }} ${{ parameters.localTls }} ${{ parameters.remoteTls }} ${{ parameters.extraName }}
  ${{ if ne(parameters.pool, '') }}:
    pool: ${{ parameters.pool }}
  ${{ if eq(parameters.pool, '') }}:
    pool:
      vmImage: ${{ parameters.image }}
  variables:
  - name: runCodesignValidationInjection
    value: false
  - name: skipComponentGovernanceDetection
    value: true
  - group: DeploymentKeys
  steps:
  - checkout: self

  - task: DeleteFiles@1
    displayName: Clear Old Artifacts
    inputs:
      contents: '**/artifacts/*'

  - template: ./download-artifacts.yml
    parameters:
      platform: ${{ parameters.platform }}
      arch: ${{ parameters.arch }}
      tls: ${{ parameters.localTls }}

  - ${{ if ne(parameters.localTls, parameters.remoteTls) }}:
    - template: ./download-artifacts.yml
      parameters:
        platform: ${{ parameters.platform }}
        arch: ${{ parameters.arch }}
        tls: ${{ parameters.remoteTls }}

  - task: PowerShell@2
    displayName: Prepare Test Machine
    inputs:
      pwsh: true
      filePath: scripts/prepare-machine.ps1
      arguments: -Configuration Test

  - task: PowerShell@2
    displayName: Run Performance Test
    timeoutInMinutes: 12
    continueOnError: true
    inputs:
      pwsh: true
      filePath: scripts/performance.ps1
      arguments: -Config ${{ parameters.config }} -LocalTls ${{ parameters.localTls }} -RemoteTls ${{ parameters.remoteTls }} -LocalArch ${{ parameters.arch }} -RemoteArch ${{ parameters.arch }}  ${{ parameters.extraArgs }}

  - task: CopyFiles@2
    displayName: Move Performance Results
    inputs:
      sourceFolder: artifacts/PerfDataResults
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    displayName: Upload Performance Results
    inputs:
      artifactName: performance
      pathToPublish: $(Build.ArtifactStagingDirectory)
      parallel: true

  - task: Powershell@2
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Publish Performance Results
    inputs:
      pwsh: true
      filePath: scripts/publish-performance-results.ps1
    env:
      MAPPED_DEPLOYMENT_KEY: $(DatabaseDeploymentKey)
