#
# This pipeline executes a single run of the interop runner between a chosen
# client and server implementation.
#

parameters:
  build: 'latest'
  dependsOn: []
  timeout: 15
  measurements: false

jobs:
  - ${{ each client in parameters.clients }}:
    - ${{ each server in parameters.servers }}:
      - job:
        displayName: ${{ client }} -> ${{ server }}
        dependsOn: ${{ parameters.dependsOn }}
        pool:
          vmImage: 'ubuntu-latest'
        variables:
          runCodesignValidationInjection: false
        steps:
        - checkout: none
        - script: |
            sudo apt-get install -y cmake libglib2.0-dev libgcrypt20-dev flex \
              bison byacc libpcap-dev ninja-build libc-ares-dev
            wget https://www.wireshark.org/download/src/wireshark-latest.tar.xz
            tar -xvf wireshark-latest.tar.xz
            rm wireshark-latest.tar.xz
            mv ./wireshark-* ./wireshark
            cd wireshark
            cmake -GNinja -DBUILD_wireshark=0 -DBUILD_sdjournal=0 \
              -DBUILD_sshdump=0 -DBUILD_ciscodump=0 .
            ninja
            sudo ninja install
          displayName: Install Wireshark

        - script: |
            sudo apt-get install -y python3-setuptools
            sudo modprobe ip6table_filter
            docker image ls
            git clone "https://github.com/marten-seemann/quic-interop-runner.git"
            cd quic-interop-runner
            pip3 install -r requirements.txt
            python3 pull.py -i ${{ client }},${{ server }}
          displayName: Setup Runner

        - script: |
            cd quic-interop-runner
            python3 run.py -l ./logs \
              -s ${{ server }} -c ${{ client }} -t onlyTests \
              --replace msquic=mcr.microsoft.com/msquic/qns:${{ parameters.build }} || true
          displayName: Run Tests
          timeoutInMinutes: ${{ parameters.timeout }}
          continueOnError: true

        - ${{ if eq(parameters.measurements, true) }}:
          - script: |
              cd quic-interop-runner
              python3 run.py -l ./logs \
                -s ${{ server }} -c ${{ client }} -t onlyMeasurements \
                --replace msquic=mcr.microsoft.com/msquic/qns:${{ parameters.build }} || true
            displayName: Run Measurements
            timeoutInMinutes: ${{ parameters.timeout }}
            continueOnError: true

        - task: PublishPipelineArtifact@1
          displayName: Upload Logs
          inputs:
            targetPath: quic-interop-runner/logs/${{ server }}_${{ client }}
            artifactName: qns_${{ server }}_${{ client }}
