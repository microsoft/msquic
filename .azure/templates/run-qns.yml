#
# This pipeline executes a single run of the interop runner between a chosen
# client and server implementation.
#
# TODO:
#
#  - Only pull running implementations.
#  - Specify an explicit log directory.
#  - Upload that log directory.
#

jobs:
  - ${{ each client in parameters.clients }}:
    - ${{ each server in parameters.servers }}:
      - job:
        displayName: ${{ client }} -> ${{ server }}
        variables:
          runCodesignValidationInjection: false
        steps:
        - script: |
            wget https://www.wireshark.org/download/src/wireshark-latest.tar.xz
            tar -xvf wireshark-latest.tar.xz
            cd ./wireshark-*/
            sudo apt install -y cmake libglib2.0-dev libgcrypt20-dev flex bison byacc \
              libpcap-dev qtbase5-dev libssh-dev libsystemd-dev qtmultimedia5-dev \
              libqt5svg5-dev qttools5-dev
            cmake .
            make
            sudo make install
          displayName: Setup (Wireshark)

        - script: |
            sudo apt-get install -y python3-setuptools
            git clone "https://github.com/marten-seemann/quic-interop-runner.git"
            cd quic-interop-runner
            pip3 install -r requirements.txt
            python3 pull.py
          displayName: Setup (Interop Runner)

        - script: |
            cd quic-interop-runner
            pwd
            python3 run.py -s ${{ server }} -c ${{ client }}
          displayName: Run
          timeoutInMinutes: 20
          continueOnError: true

        - task: CopyFiles@2
          displayName: Move Logs
          inputs:
            sourceFolder: quic-interop-runner
            Contents: |
              **\?(.log|.txt|.qlog|.pcap)
            targetFolder: $(Build.ArtifactStagingDirectory)/${{ client }}_${{ server }}

        - task: PublishBuildArtifacts@1
          displayName: Upload Logs
          inputs:
            artifactName: logs
            pathToPublish: $(Build.ArtifactStagingDirectory)
            parallel: true
