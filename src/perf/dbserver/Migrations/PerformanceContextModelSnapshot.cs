// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuicDataServer.Data;

namespace QuicPerformanceDataServer.Migrations
{
    [DbContext(typeof(PerformanceContext))]
    partial class PerformanceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuicDataServer.Models.Db.DbMachine", b =>
                {
                    b.Property<int>("DbMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPUInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoryInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NicInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingSystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DbMachineId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("QuicDataServer.Models.Db.DbPlatform", b =>
                {
                    b.Property<int>("DbPlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DbPlatformId");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("QuicDataServer.Models.Db.DbTest", b =>
                {
                    b.Property<int>("DbTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DbPlatformId")
                        .HasColumnType("int");

                    b.Property<string>("TestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DbTestId");

                    b.HasIndex("DbPlatformId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("QuicDataServer.Models.Db.DbTestRecord", b =>
                {
                    b.Property<int>("DbTestRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommitHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DbMachineId")
                        .HasColumnType("int");

                    b.Property<int>("DbTestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TestDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DbTestRecordId");

                    b.HasIndex("DbMachineId");

                    b.HasIndex("DbTestId");

                    b.ToTable("TestRecords");
                });

            modelBuilder.Entity("QuicDataServer.Models.Db.DbTest", b =>
                {
                    b.HasOne("QuicDataServer.Models.Db.DbPlatform", null)
                        .WithMany("Tests")
                        .HasForeignKey("DbPlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuicDataServer.Models.Db.DbTestRecord", b =>
                {
                    b.HasOne("QuicDataServer.Models.Db.DbMachine", null)
                        .WithMany("TestRecords")
                        .HasForeignKey("DbMachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuicDataServer.Models.Db.DbTest", null)
                        .WithMany("TestRecords")
                        .HasForeignKey("DbTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("QuicDataServer.Models.Db.TestResult", "TestResults", b1 =>
                        {
                            b1.Property<int>("DbTestRecordId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<double>("Result")
                                .HasColumnType("float");

                            b1.HasKey("DbTestRecordId", "Id");

                            b1.ToTable("TestResult");

                            b1.WithOwner()
                                .HasForeignKey("DbTestRecordId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
